// <auto-generated />
using System;
using CarteiraDigital.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CarteiraDigital.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(CarteiraDbContext))]
    partial class CarteiraDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CarteiraDigital.Domain.Entities.Transfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdFinalUser")
                        .HasColumnType("integer");

                    b.Property<int>("IdInitialUser")
                        .HasColumnType("integer");

                    b.Property<int>("IdInitialWallet")
                        .HasColumnType("integer");

                    b.Property<int>("IdWalletFinalUser")
                        .HasColumnType("integer");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("IdInitialWallet");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("CarteiraDigital.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CarteiraDigital.Domain.Entities.Wallet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("IdUser")
                        .HasColumnType("integer");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("Wallets");
                });

            modelBuilder.Entity("CarteiraDigital.Domain.Entities.Transfer", b =>
                {
                    b.HasOne("CarteiraDigital.Domain.Entities.Wallet", "Wallets")
                        .WithMany("UserTransfers")
                        .HasForeignKey("IdInitialWallet")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Wallets");
                });

            modelBuilder.Entity("CarteiraDigital.Domain.Entities.Wallet", b =>
                {
                    b.HasOne("CarteiraDigital.Domain.Entities.User", "User")
                        .WithMany("WalletUser")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CarteiraDigital.Domain.Entities.User", b =>
                {
                    b.Navigation("WalletUser");
                });

            modelBuilder.Entity("CarteiraDigital.Domain.Entities.Wallet", b =>
                {
                    b.Navigation("UserTransfers");
                });
#pragma warning restore 612, 618
        }
    }
}
